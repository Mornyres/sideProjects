// A basic signal technician setup for the game Space Station 13. Basically, processes player radio input after modulation to then be passed to the appropriate radio channel. Don't worry if none of that makes sense. It's based on CPP syntax, so I figured why not add it in? 
// It's in .txt format because I'd generally be copy+pasting this into an in-game console -- in other words, this file isn't directly being run, I'm just saving the text for my character to reproduce.
// See if you can spot the prank involved.
// ***********************************************************************

def process_signal(sig){

// ***********************************************************************
// JOB LIST PRESETS
// ***********************************************************************

// Brevity preset
	jobs=list(
"Admiral", "Adm", 
"Assistant", "Asst", 
"Atmospheric Technician", "Atmo", 
"Bartender", "Bar", 
"Botanist", "Hydr", 
"Captain", "SigTech", 
"Cargo Technician", "CTech", 
"Chaplain", "Chap", 
"Chemist", "Chem", 
"Chief Engineer", "CE", 
"Chief Medical Officer", "CMO", 
"Clerk", "Clrk", 
"Clown", "Clown", 
"Curator", "Cura", 
"Detective", "Det", 
"Geneticist", "Gene", 
"Head of Personnel", "HoP", 
"Head of Security", "HoS", 
"Janitor", "Jani", 
"Lawyer", "Law", 
"Librarian", "Lib", 
"Medical Doctor", "MD", 
"Mining Medic", "Medi", 
"Paramedic", "Para", 
"Psychiatrist", "Psyc", 
"Quartermaster", "QM", 
"Research Director", "RD", 
"Roboticist", "Robo", 
"Scientist", "Sci", 
"Security Officer", "Sec", 
"Shaft Miner", "Mine", 
"Signal Technician", "Captain", 
"Station Engineer", "Engi", 
"Tourist", "Tour", 
"Unassigned", "UNAS", 
"Unknown", "UNKN", 
"Virologist", "Viro", 
"Warden", "Ward", 
"Personal AI", "pAI", 
"Default Cyborg", "DefB", 
"Engineering Cyborg", "EngB", 
"Janitor Cyborg", "JanB", 
"Medical Cyborg", "MedB", 
"Miner Cyborg", "MnrB", 
"Peacekeeper Cyborg", "PceB", 
"Security Cyborg", "SecB", 
"Service Cyborg", "SrvB", 
"Standard Cyborg", "StnB");

if(find(jobs,sig.job)){ 
	sig.job=jobs[find(jobs,sig.job)+1]; 
}

sig.source+="["+sig.job+"]";

// ***********************************************************************
// CONTENT FILTERING
// ***********************************************************************

// Normally this list would of course be more explicit if I were actually using it, but this is just an exhibit so I'll spare your eyes...
filterwords = list (
"DARN", "HECK", "CRUD"
);
//	if(find(filterwords, sig.content)){ sig.pass=0;}

	

return sig;}
